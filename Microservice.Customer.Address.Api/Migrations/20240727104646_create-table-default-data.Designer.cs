// <auto-generated />
using System;
using Microservice.Customer.Address.Api.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Microservice.Customer.Address.Api.Migrations
{
    [DbContext(typeof(CustomerAddressDbContext))]
    [Migration("20240727104646_create-table-default-data")]
    partial class createtabledefaultdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microservice.Customer.Address.Api.Domain.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MSOS_Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "England"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wales"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Northern Ireland"
                        });
                });

            modelBuilder.Entity("Microservice.Customer.Address.Api.Domain.CustomerAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CountryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("County")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Postcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TownCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("MSOS_CustomerAddress");

                    b.HasData(
                        new
                        {
                            Id = new Guid("724cbd34-3dff-4e2a-a413-48825f1ab3b9"),
                            AddressLine1 = "Intergration_Test",
                            AddressLine2 = "Intergration_Test",
                            AddressLine3 = "Intergration_Test",
                            CountryId = 1,
                            County = "Intergration_Test",
                            Created = new DateTime(2024, 7, 27, 11, 46, 45, 590, DateTimeKind.Local).AddTicks(9928),
                            CustomerId = new Guid("6c84d0a3-0c0c-435f-9ae0-4de09247ee15"),
                            LastUpdated = new DateTime(2024, 7, 27, 11, 46, 45, 590, DateTimeKind.Local).AddTicks(9976),
                            Postcode = "HD6 TRF",
                            TownCity = "Intergration_Test"
                        },
                        new
                        {
                            Id = new Guid("b88ef4ce-739f-4c1b-b6d6-9d0727515de8"),
                            AddressLine1 = "Intergration_Test2",
                            AddressLine2 = "Intergration_Test2",
                            AddressLine3 = "Intergration_Test2",
                            CountryId = 2,
                            County = "Intergration_Test2",
                            Created = new DateTime(2024, 7, 27, 11, 46, 45, 591, DateTimeKind.Local).AddTicks(10),
                            CustomerId = new Guid("929eaf82-e4fd-4efe-9cae-ce4d7e32d159"),
                            LastUpdated = new DateTime(2024, 7, 27, 11, 46, 45, 591, DateTimeKind.Local).AddTicks(12),
                            Postcode = "ST4 VFR",
                            TownCity = "Intergration_Test2"
                        });
                });

            modelBuilder.Entity("Microservice.Customer.Address.Api.Domain.CustomerAddress", b =>
                {
                    b.HasOne("Microservice.Customer.Address.Api.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
